//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITG.Brix.Users.API.Context.Resources
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ServiceErrorMessages
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ServiceErrorMessages()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ITG.Brix.Users.API.Context.Resources.ServiceErrorMessages", typeof(ServiceErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Server failed to authenticate the request..
        /// </summary>
        public static string AuthenticationFailed
        {
            get
            {
                return ResourceManager.GetString("AuthenticationFailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The condition specified in the conditional header(s) was not met for a write operation..
        /// </summary>
        public static string ConditionNotMet
        {
            get
            {
                return ResourceManager.GetString("ConditionNotMet", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The value provided for one of the HTTP headers was not in the correct format..
        /// </summary>
        public static string InvalidHeaderValue
        {
            get
            {
                return ResourceManager.GetString("InvalidHeaderValue", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to One of the request inputs is not valid..
        /// </summary>
        public static string InvalidInput
        {
            get
            {
                return ResourceManager.GetString("InvalidInput", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to An invalid value was specified for one of the query parameters in the request URI..
        /// </summary>
        public static string InvalidQueryParameterValue
        {
            get
            {
                return ResourceManager.GetString("InvalidQueryParameterValue", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A required HTTP header was not specified..
        /// </summary>
        public static string MissingRequiredHeader
        {
            get
            {
                return ResourceManager.GetString("MissingRequiredHeader", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A required query parameter was not specified for this request..
        /// </summary>
        public static string MissingRequiredQueryParameter
        {
            get
            {
                return ResourceManager.GetString("MissingRequiredQueryParameter", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to None..
        /// </summary>
        public static string None
        {
            get
            {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The specified resource already exists..
        /// </summary>
        public static string ResourceAlreadyExists
        {
            get
            {
                return ResourceManager.GetString("ResourceAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The specified resource does not exist..
        /// </summary>
        public static string ResourceNotFound
        {
            get
            {
                return ResourceManager.GetString("ResourceNotFound", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Unsupported media type..
        /// </summary>
        public static string UnsupportedMediaType
        {
            get
            {
                return ResourceManager.GetString("UnsupportedMediaType", resourceCulture);
            }
        }
    }
}
